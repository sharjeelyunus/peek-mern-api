{"version":3,"sources":["shared/components/UIelements/Card.js","shared/components/UIelements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.b84a82b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        new window.ol.Map({\r\n            target: mapRef.current.id,\r\n            layers: [\r\n                new window.ol.layer.Tile({\r\n                    source: new window.ol.source.OSM()\r\n                })\r\n            ],\r\n            view: new window.ol.View({\r\n                center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n                zoom: zoom\r\n            })\r\n        });\r\n    }, [center, zoom]);\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            className={`map ${props.className}`}\r\n            style={props.style}\r\n            id=\"map\"\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default Map;","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIelements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIelements/Modal';\r\nimport Map from '../../shared/components/UIelements/Map';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIelements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIelements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(\r\n                `https://peek-mern.herokuapp.com/api/places/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            props.onDelete(props.id);\r\n        } catch (err) { }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>\r\n                            CANCEL\r\n              </Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            DELETE\r\n              </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    Do you want to proceed and delete this place? Please note that it\r\n                    can't be undone thereafter.\r\n          </p>\r\n            </Modal>\r\n            <li className=\"place-item\">\r\n                <Card className=\"place-item__content\">\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className=\"place-item__image\">\r\n                        <img src={`https://peek-mern.herokuapp.com/${props.image}`} alt={props.title} />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>\r\n                            VIEW ON MAP\r\n              </Button>\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button to={`/places/${props.id}`}>EDIT</Button>\r\n                        )}\r\n\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button danger onClick={showDeleteWarningHandler}>\r\n                                DELETE\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIelements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <h2>No Places Found. Maybe Create one?</h2>\r\n                    <Button to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place => (\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    image={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorId={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/UIelements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIelements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `https://peek-mern.herokuapp.com/api/places/user/${userId}`\r\n                );\r\n                setLoadedPlaces(responseData.places);\r\n            } catch (err) { }\r\n        };\r\n        fetchPlaces();\r\n\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = deletedPlaceId => {\r\n        setLoadedPlaces(prevPlaces =>\r\n            prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}